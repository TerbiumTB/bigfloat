#include "gtest/gtest.h"
#include "bigfloat.h"

TEST(ARITMETHICS, ADD1){
    bigfloat a{"0.011111123123123123123112312312"};
    bigfloat b{"-1231242456.122676881236123415236152436512"};
    EXPECT_EQ("-1231242456.1115657581130002921130401242", (a+b).to_string(28));
}

TEST(ARITMETHICS, ADD2){
    bigfloat a{"999999999999.9999999999998"};
    bigfloat b{"1000000000000.0000000000002"};
//    bigfloat::precision() = 13;
    EXPECT_EQ("2000000000000.0", (a+b).to_string(13));
}

TEST(ARITMETHICS, ADD3){
    bigfloat a{"12314234234231698766786637281766787567650.1876372991872367123987615671976238021"};
    bigfloat b{"98763754672534768523786452938745927636408716807687436587643756.62345671525761476596712435971623459134561932745912374519273645129736459127346746763478657436578346585"};
//    bigfloat::precision() = 101;
    EXPECT_EQ("98763754672534768523798767172980159335175503444969203375211406.81109401444485147836588592691385839344561932745912374519273645129736459127346746763478657436578346585", (a+b).to_string(101));
}

TEST(ARITMETHICS, MUL1){
    bigfloat a{"0.000000000007"};
    bigfloat b{"-1235676.376"};
//    bigfloat::precision() = 30;
    EXPECT_EQ("-0.000008649734632", (a*b).to_string(300));
}

TEST(ARITMETHICS, MUL2){
    bigfloat a{"-1234512671652431234125319263518724538162.91623516253712539127653612166526352717362561765276567716520"};
    bigfloat b{"-983764982374235176253912346536491235417926547236237763546725751.283645263547162534179251279654271963549172541928735128375127451291764591263519723619726451023971264519237612549176"};
//    bigfloat::precision() = 174;
    EXPECT_EQ("1214470336668923990559068314038839102202252874117680897495560920031939726277348022454933826195668968087.5455566412520028538379286312614689094710926963525509490680330243635325881477091769772767342900409321009804032374550665772131766586584045536918809738158984196966210252758752", (a*b).to_string(172));
}

TEST(ARITMETHICS, MUL3){
    bigfloat a{"0.00000000000000000000000011111123123123123123112312312"};
    bigfloat b{"-0.0000000000123612361276127461270000000000000982731928371"};
//    bigfloat::precision() = 108;
    EXPECT_EQ("-0.000000000000000000000000000000000001373472165679029162787988214674336011047377310634846836222717584565403752", (a*b).to_string(200));
}

TEST(ARITMETHICS, DIV1){
    bigfloat a{"0.00011111123123123123123112312312"};
    bigfloat b{"-1231242456.122676881236123415236152436512"};
//    bigfloat::precision() = 60;
    EXPECT_EQ("-0.000000000000090243177270814059461494913521215615611214938769", (a/b).to_string(60));
}

TEST(ARITMETHICS, DIV2){
    bigfloat a{"-10"};
    bigfloat b{"-0.0000000000000001"};
//    bigfloat::precision() = 30;
    EXPECT_EQ("100000000000000000.0", (a/b).to_string(30));
}

TEST(ARITMETHICS, DIV3){
    bigfloat a{"12456235147681546725176453128745127863457162354769.192346651925349126534961523948715239847512835741928736541726354"};
    bigfloat b{"-0.000000"};
//    bigfloat::precision() = 1000000;
    EXPECT_THROW(a/b, std::overflow_error);
}